"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.degreeToString = exports.groupByfield = void 0;
/**
 * Find a value inside an obj based on a given path of the form obj.key.nestedKey
 */
const findValueByPath = (path, obj) => {
    return path.split(".").reduce((prev, cur) => (prev ? prev[cur] : null), obj);
};
/**
 * Receives an array and a field
 * Returns an object with all elements of the array "data" being grouped by "field"
 */
const groupByfield = (data, field) => data.reduce((grouped, element) => {
    const key = findValueByPath(field, element);
    grouped[key] = grouped[key] || { label: key, options: [] };
    grouped[key]["options"] = [...(grouped[key]["options"] || []), element];
    return grouped;
}, {});
exports.groupByfield = groupByfield;
const degreeToString = (value) => {
    const parsedValue = value.toString().replaceAll(".", ",");
    return parsedValue === "0" ? "0,5" : parsedValue;
};
exports.degreeToString = degreeToString;
