export declare const headerStyles = "\n  .embeddable-map-header {font-family: LinearSans, Arial, Helvetica, sans-serif;border: 1px solid #2a172d;background-color: #fdfdfd;padding: 15px 10px;position: relative;font-size: 16px;top: 20px;left: 20px;margin-right: 40px;display: inline-block;z-index: 1;}\n  .embeddable-map-title {font-size: 10px;font-weight: 600;letter-spacing: 0.8px;line-height: 11px;text-transform: uppercase;margin-bottom: 5px;}\n  .embeddable-map-header-description {margin: 0;font-size: 18px;font-weight: bold;}\n";
export declare const keyStyles = "\n  .embeddable-key-container {position: absolute;min-width: 280px;top: unset;right: 20px;left: 20px;bottom: 20px;z-index: 1;width: auto;font-family: LinearSans, Arial, Helvetica, sans-serif;}\n  .map-key-container {border: 1px solid #2a172d;padding: 12px 18px 9px;background-color: #fdfdfd;border-bottom: 1px solid #2a172d;}\n  .embeddable-key-content {display: inline-block;width: 100%;}\n  .map-key-header {display: flex;flex-direction: row;justify-content: space-between;align-items: center;margin-bottom: 10px;}\n  .map-key-label {display: block;font-size: 10px;color: #2a172d;font-weight: 600;letter-spacing: 0.8px;line-height: 11px;text-transform: uppercase;margin-bottom: 8px;}\n  .map-key-row {display: flex;width: 100%;}\n  .map-key-bins-container {display: flex;align-items: flex-start;width: 100%;}\n  .map-key-bin-container {display: flex;flex-direction: column;margin-right: 2px;min-width: 43px;flex: 1;max-width: 120px;}\n  .map-key-color {height: 12px;}\n  .map-key-bin {font-family: \"RelativeMono\", Courier, monospace;color: #2a172d;font-size: 9px;letter-spacing: 0;line-height: 16px;text-align: center;margin-top: 2px;display: flex;justify-content: space-evenly;}\n  .map-key-bin .dash {font-size: 13px;}\n  .map-key-inner-bin-label {display: flex;}\n  .embeddable-bottom-link {position: absolute;left: 0;padding: 0 5px;background-color: rgba(255, 255, 255, 0.5);font-size: 12px;font-family: Helvetica Neue, Arial, Helvetica, sans-serif;line-height: 20px;color: rgba(0, 0, 0, 0.75);z-index: 3;cursor: pointer;text-decoration: none;bottom: 0;}\n  @media (orientation: landscape) {.map-key-bin {font-size: 10px;}}\n  @media (min-width: 768px) {.map-key-bin {font-size: 9px;}}\n  @media (min-width: 768px) {.embeddable-key-container {right: unset; min-width: 480px;}}\n  @media (min-width: 1200px) {.map-key-bin {font-size: 13px;margin-top: 4px;}}\n  @media (min-width: 1200px) {.map-key-color {height: 14px;}}\n  @media (orientation: landscape) {.map-key-bin-container {min-width: 43px;}}\n  @media (min-width: 768px) {.map-key-bin-container {min-width: 47px;}}\n  @media (min-width: 1200px) {.map-key-bin-container {margin-right: 3px;min-width: 80px;}}\n  @media (min-width: 768px) {.map-key-bins-container {margin-right: 13px;}}\n  @media (min-width: 1200px) {.map-key-bins-container {margin-right: 0;}}\n  @media (min-width: 1200px) {.map-key-label {margin-bottom: 8px;}}\n  @media (min-width: 1200px) {.map-key-header { margin-bottom: 10px;}}\n  @media (min-width: 1200px) {.map-key-inner-bin-label { gap: 5px; }}\n  /*Key toggle*/\n  .embeddable-toggle-container {margin-top: -6px;}\n  .embeddable-toggle {position: relative;width: 62px;height: 22px;background-color: #fdfdfd;border-radius: 4px;margin: 0 5px;border: 1px solid #2a172d;box-sizing: border-box;display: flex;font-family: \"RelativeMono\";font-size: 13px;letter-spacing: 0;line-height: 16px;text-align: center;user-select: none; align-items: center;}\n  .embeddable-toggle .toggle-span {position: absolute;top: 2px;left: 3px;width: 25px;height: 16px;border-radius: 4px;transition: 0.2s;background-color: #2a172d;}\n  .embeddable-toggle-label {display: flex;align-items: center;justify-content: space-between;cursor: pointer;}\n  .embeddable-toggle-label:active .toggle-span {width: 30px;}\n  .embeddable-toggle-label:hover .embeddable-toggle {border: 1px solid #8C6FF1;}\n  .embeddable-toggle-label:hover .toggle-span {background-color: #8C6FF1;}\n  .embeddable-toggle-input {display: none;}\n  .embeddable-toggle-input:checked + .embeddable-toggle-label .toggle-span {left: calc(100% - 3px);transform: translateX(-100%);}\n  .embeddable-toggle-option {flex: 1;   transition: color 0.6s ease;z-index: 1;}\n  @media (min-width: 1200px) {.embeddable-toggle-container {margin-bottom: 14px; margin-top: 0px;}}\n  @media (min-width: 1200px) {.embeddable-toggle {margin: 0 7px 0 9px;}}\n  /* Climate Zones key*/\n  .climate-zones-key-container {white-space: nowrap;box-sizing: content-box;padding: 0px;padding-left: 16px;width: auto;height: 80px;overflow-x: scroll;background-color: #fdfdfd;border: 1px solid #2a172d;display: flex;align-items: center;}\n  .cz-bins-container {display: grid;grid-template-columns: auto auto auto auto auto auto;margin-bottom: 10px;grid-column-gap: 40px;margin-right: -20px;}\n  .cz-bin-container {display: flex;flex-direction: column;flex: 1;gap: 15px;position: relative;margin-top: 2px;}\n  .cz-bin-container:not(:last-child):after {content: \"\";display: block;position: absolute;top: 20px;right: -21px;bottom: 0;width: 1px;background-color: #adadad;height: 22px;}\n  .cz-color-bin-wrapper {display: flex;align-items: center;gap: 10px;}\n  .cz-key-color {height: 10px;width: 10px;aspect-ratio: 1/1;}\n  .cz-group-name {font-size: 12px;line-height: 11px;font-family: LinearSans;}\n  @media (min-width: 1200px) {.cz-bin-container {margin-top: 0px;gap: 20px;}}\n  @media (min-width: 1200px) {.cz-bin-container:not(:last-child):after {height: 32px;}}\n  @media (min-width: 768px) {.climate-zones-key-container {overflow-x: hidden;}}\n";
export declare const miscStyles = "\n  .reset-map-button:hover {background-color: rgb(0 0 0 / 5%)!important;}\n";
export declare const displayKeyFunction = "\n  function displayKey() {\n    // create main divs\n    const embeddableKeyContainer = document.createElement(\"div\");\n    embeddableKeyContainer.className = \"embeddable-key-container\";\n    const mapKeyContainer = document.createElement(\"div\");\n    mapKeyContainer.className = \"map-key-container\";\n    const keyContent = document.createElement(\"div\");\n    keyContent.className = \"map-key-content\";\n    const keyHeader = document.createElement(\"div\");\n    keyHeader.className = \"map-key-header\";\n    const label = document.createElement(\"span\");\n    label.className = \"map-key-label\";\n    const keyRow = document.createElement(\"div\");\n    keyRow.className = \"map-key-row\";\n    keyHeader.appendChild(label);\n    keyContent.appendChild(keyHeader);\n    keyContent.appendChild(keyRow);\n    mapKeyContainer.appendChild(keyContent);\n    embeddableKeyContainer.appendChild(mapKeyContainer);\n    document.body.appendChild(embeddableKeyContainer);\n\n    if(isTempMap || isPrecipitationMap) {\n      keyHeader.appendChild(displayKeyToggle());\n    }\n    label.textContent = isTempMap ? dataset.dataset.pfDatasetUnitByUnit.unitLong.replace(\"\u00B0C\", tempUnit) : dataset.dataset.pfDatasetUnitByUnit.unitLong;\n\n    const binsContainerDiv = document.createElement(\"div\");\n    binsContainerDiv.className = \"map-key-bins-container\";\n    dataset.binHexColors.map(function(color, index) {\n      const [from, to] = getBinLabel(dataset.stops, index, dataset.dataset.pfDatasetUnitByUnit.unitLong, dataset.dataset.minValue,\n        dataset.dataset.maxValue, dataset.dataset.unit === \"mm\" && precipitationUnit === \"in\" ? 0.1 : dataset.step,\n        tempUnit, dataset.isDiff, isFrequent, precipitationUnit, isPrecipitationMap);\n      const binContainerDiv = document.createElement(\"div\");\n      const colorDiv = document.createElement(\"div\");\n      const binSpan = document.createElement(\"span\");\n      binContainerDiv.className = \"map-key-bin-container\";\n      colorDiv.className = \"map-key-color\";\n      binSpan.className = \"map-key-bin\";\n      colorDiv.style.backgroundColor = color;\n\n      if(dataset.binLabels) {\n        const innerBinSpan = document.createElement(\"span\");\n        innerBinSpan.textContent = dataset.binLabels[index];\n        binSpan.appendChild(innerBinSpan);\n      } else if (to !== undefined) {\n        const innerBinSpan = document.createElement(\"span\");\n        innerBinSpan.className = \"map-key-inner-bin-label\";\n        const dashSpan = document.createElement(\"span\");\n        const fromText = document.createTextNode(from);\n        const toText = document.createTextNode(to);\n        dashSpan.textContent = \"\u2013\";\n        innerBinSpan.appendChild(fromText);\n        innerBinSpan.appendChild(dashSpan);\n        innerBinSpan.appendChild(toText);\n        binSpan.appendChild(innerBinSpan);\n      } else {\n        const innerBinSpan = document.createElement(\"span\");\n        innerBinSpan.className = \"map-key-inner-bin-label\";\n        const fromText = document.createTextNode(from);\n        innerBinSpan.appendChild(fromText);\n        binSpan.appendChild(innerBinSpan);\n      }\n      binContainerDiv.appendChild(colorDiv);\n      binContainerDiv.appendChild(binSpan);\n      binsContainerDiv.appendChild(binContainerDiv);\n    });\n    keyRow.appendChild(binsContainerDiv);\n  }\n";
export declare const displayKeyToggleFunction = "\n  function displayKeyToggle() {\n    const toggleContainer = document.createElement(\"div\");\n    const leftToggleLabel = isTempMap ? \"\u00B0C\" : \"mm\";\n    const rightToggleLabel = isTempMap ? \"\u00B0F\" : \"in\";\n\n    const isChecked = isTempMap ? tempUnit === \"\u00B0F\" : precipitationUnit === \"in\";\n    toggleContainer.className = \"embeddable-toggle-container\";\n\n    const toggleInput = document.createElement(\"input\");\n    toggleInput.className = \"embeddable-toggle-input\";\n    toggleInput.id = \"toggle\";\n    toggleInput.type = \"checkbox\";\n    toggleInput.checked = isChecked;\n    toggleInput.addEventListener('change', handleToggleChange);\n\n    const toggleLabel = document.createElement(\"label\");\n    toggleLabel.htmlFor = \"toggle\";\n    toggleLabel.className = \"embeddable-toggle-label\";\n\n    const toggle = document.createElement(\"div\");\n    toggle.className = \"embeddable-toggle\";\n\n    const toggleOptionLeft = document.createElement(\"span\");\n    toggleOptionLeft.className = \"embeddable-toggle-option\";\n    toggleOptionLeft.id = \"toggle-option1\";\n    if(isChecked) {toggleOptionLeft.style.color = \"#2a172d\"}\n    else {toggleOptionLeft.style.color = \"#fdfdfd\"}\n    toggleOptionLeft.textContent = leftToggleLabel;\n\n    const toggleOptionRight = document.createElement(\"span\");\n    toggleOptionRight.className = \"embeddable-toggle-option\";\n    toggleOptionRight.id = \"toggle-option2\";\n    if(isChecked) {toggleOptionRight.style.color = \"#fdfdfd\"}\n    else {toggleOptionRight.style.color = \"#2a172d\"}\n    toggleOptionRight.textContent = rightToggleLabel;\n\n    const toggleSpan = document.createElement(\"span\");\n    toggleSpan.className = \"toggle-span\";\n\n    toggle.appendChild(toggleOptionLeft);\n    toggle.appendChild(toggleOptionRight);\n    toggle.appendChild(toggleSpan);\n    toggleLabel.appendChild(toggle);\n\n    toggleContainer.appendChild(toggleInput);\n    toggleContainer.appendChild(toggleLabel);\n\n    return toggleContainer;\n  }\n";
export declare const displayClimateZonesKey = "\n  function displayClimateZoneKey() {\n    const czKeyContainer = document.createElement(\"div\");\n    czKeyContainer.className = \"climate-zones-key-container\";\n    const czBinsContainer = document.createElement(\"div\");\n    czBinsContainer.className = \"cz-bins-container\";\n    const embeddableKeyContainer = document.createElement(\"div\");\n    embeddableKeyContainer.className = \"embeddable-key-container\";\n\n    let index = 0;\n    datasetDescriptionResponse.climate_zones.map(group => {\n      const czBinContainer = document.createElement(\"div\");\n      czBinContainer.className = \"cz-bin-container\";\n      const czGroupName = document.createElement(\"div\");\n      czGroupName.className = \"cz-group-name\";\n      czGroupName.textContent = group.name;\n      czBinContainer.appendChild(czGroupName);\n      const czColorBinWrapper = document.createElement(\"div\");\n      czColorBinWrapper.className = \"cz-color-bin-wrapper\";\n\n      group.list?.map((climateZone) => {\n        const color = dataset.binHexColors[index++];\n        const czKeyColor = document.createElement(\"div\");\n        czKeyColor.className = \"cz-key-color\";\n        czKeyColor.style.backgroundColor = color;\n        czKeyColor.title = climateZone.name;\n        czColorBinWrapper.appendChild(czKeyColor);\n      });\n      czBinContainer.appendChild(czColorBinWrapper);\n      czBinsContainer.appendChild(czBinContainer);\n    });\n    czKeyContainer.appendChild(czBinsContainer);\n    embeddableKeyContainer.appendChild(czKeyContainer);\n    document.body.appendChild(embeddableKeyContainer);\n  }\n";
export declare const displayBottomLinkFunction = "\n  function displayBottomLink() {\n    const link = document.createElement(\"a\");\n    link.target = \"_blank\";\n    link.target = \"noopener noreferrer\";\n    link.href = MAP_VERSION_URL;\n    link.textContent = \"Probable Futures map v\" + dataset.mapVersion;\n    link.className = \"embeddable-bottom-link\";\n    document.body.appendChild(link);\n  }\n";
export declare const displayHeaderFunction = "\n  function displayHeader() {\n    const headerDiv = document.createElement(\"div\");\n    headerDiv.className = \"embeddable-map-header\";\n    const headerTitle = document.createElement(\"div\");\n    headerTitle.className = \"embeddable-map-title\";\n    headerTitle.textContent = \"CLIMATE MAP\";\n    const headerDesc = document.createElement(\"p\");\n    headerDesc.className = \"embeddable-map-header-description\";\n    headerDesc.textContent = showCompare ? dataset.name : dataset.name + \" in a \" + degrees + \"\u00B0C \" + \"warming scenario\";\n    headerDiv.appendChild(headerTitle);\n    headerDiv.appendChild(headerDesc);\n    document.body.appendChild(headerDiv);\n  }\n";
export declare const displayResetMapButton = "\n  function displayResetButton() {\n    const resetDiv = document.createElement(\"div\");\n    resetDiv.className = \"reset-map-container\";\n    resetDiv.style.position = \"absolute\";\n    resetDiv.style.right = \"20px\";\n    resetDiv.style.top = \"calc(50% + 85px)\";\n    resetDiv.style.transform = \"translateY(-50%)\";\n    resetDiv.style.zIndex = \"1000\";\n    resetDiv.style.backgroundColor = \"white\";\n    resetDiv.style.borderRadius = \"50%\";\n\n    const resetButton = document.createElement(\"button\");\n    resetButton.className = \"reset-map-button\";\n\n    resetButton.style.padding = \"10px\";\n    resetButton.style.backgroundColor = \"#fdfdfd\";\n    resetButton.style.border = \"none\";\n    resetButton.style.borderRadius = \"50%\";\n    resetButton.style.width = \"35px\";\n    resetButton.style.height = \"35px\";\n    resetButton.style.display = \"flex\";\n    resetButton.style.alignItems = \"center\";\n    resetButton.style.justifyContent = \"center\";\n    resetButton.style.cursor = \"pointer\";\n    resetButton.style.position = \"relative\";\n    resetButton.style.boxShadow = \"0 3px 5px 0 rgb(56 22 63 / 50%)\";\n\n    const arrowDiv = document.createElement(\"div\");\n    arrowDiv.className = \"incomplete-circular-arrow\";\n\n    arrowDiv.style.width = \"15px\";\n    arrowDiv.style.height = \"11px\";\n    arrowDiv.style.border = \"2px solid transparent\";\n    arrowDiv.style.borderTopColor = \"black\";\n    arrowDiv.style.borderLeftColor = \"black\";\n    arrowDiv.style.borderBottomColor = \"black\";\n    arrowDiv.style.borderRadius = \"50%\";\n    arrowDiv.style.position = \"relative\";\n\n    const arrowHead = document.createElement(\"div\");\n    arrowHead.className = \"arrow-head\";\n\n    arrowHead.style.width = \"4px\";\n    arrowHead.style.height = \"4px\";\n    arrowHead.style.borderTop = \"2px solid black\";\n    arrowHead.style.borderRight = \"2px solid black\";\n    arrowHead.style.transform = \"rotate(72deg)\";\n    arrowHead.style.position = \"absolute\";\n    arrowHead.style.top = \"-3px\";\n    arrowHead.style.right = \"0px\";\n\n    arrowDiv.appendChild(arrowHead);\n    resetButton.appendChild(arrowDiv);\n\n    resetButton.addEventListener(\"click\", handleResetButtonClick);\n\n    resetDiv.appendChild(resetButton);\n    document.body.appendChild(resetDiv);\n  }\n";
